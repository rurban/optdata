#!/usr/bin/env perl

=pod

=head1 NAME

optdata - create optimal search data structures in C

=head1 SYNOPSIS

    wget ftp://ftp.unicode.org/Public/UNIDATA/Scripts.txt
    wc -l <Scripts.txt
    2900

    head -n45 Scripts.txt | tail -n20

    0000..001F    ; Common # Cc  [32] <control-0000>..<control-001F>
    0020          ; Common # Zs       SPACE
    0021..0023    ; Common # Po   [3] EXCLAMATION MARK..NUMBER SIGN
    0024          ; Common # Sc       DOLLAR SIGN
    0025..0027    ; Common # Po   [3] PERCENT SIGN..APOSTROPHE
    0028          ; Common # Ps       LEFT PARENTHESIS
    0029          ; Common # Pe       RIGHT PARENTHESIS
    002A          ; Common # Po       ASTERISK
    002B          ; Common # Sm       PLUS SIGN
    002C          ; Common # Po       COMMA
    002D          ; Common # Pd       HYPHEN-MINUS
    002E..002F    ; Common # Po   [2] FULL STOP..SOLIDUS
    0030..0039    ; Common # Nd  [10] DIGIT ZERO..DIGIT NINE
    003A..003B    ; Common # Po   [2] COLON..SEMICOLON
    003C..003E    ; Common # Sm   [3] LESS-THAN SIGN..GREATER-THAN SIGN
    003F..0040    ; Common # Po   [2] QUESTION MARK..COMMERCIAL AT
    005B          ; Common # Ps       LEFT SQUARE BRACKET
    005C          ; Common # Po       REVERSE SOLIDUS
    005D          ; Common # Pe       RIGHT SQUARE BRACKET

    echo '%' >uniscript.in
    perl -ane'/^[0-9]/ && print "$F[0]\t$F[2]\n"' Scripts.txt >>uniscript.in
    echo '%' >>uniscript.in

    cut -f2 uniscript.in | sort | uniq -c | sort -rn | head -n10
    492 Common
     70 Arabic
     54 Greek
     37 Tibetan
     35 Myanmar
     34 Latin
     31 Inherited
     30 Ethiopic
     30 Bengali
     29 Tamil

    cut -f2 uniscript.in | sort | uniq -c | sort -rn | wc -l
    145

    tail -n3 uniscript.in
    10EAB..10EAC	Yezidi
    10EAD	Yezidi
    10EB0..10EB1	Yezidi

    # Sees that the first numbers and ranges until 0040 are all of "Common",
    # so it might create an initial C<if (i < 0x40) return "Common";> for that.
    #
    # There are 145 unique names, most for Common, and the rest pretty evenly
    # distributed.
    #
    # There are 69297 (0x10EB1) entries, to a simple array lookup table or
    # perfect hash would be massive overkill, when we only have 145 possible
    # results.

    optdata -o uniscript.c uniscript.in
    cc -shared -fPIC uniscript.c -o libuniscript.so

=head1 DESCRIPTION

Creates an optimal compile-time data structure to search in known data, as C
source code.  Very similar to L<gperf>, but not as limited; perfect hashes are
not always the best datastructures to search in.

Accepts a list integers, ranges of integers or strings as input, which to
search for. Detects hex numbers and ranges seperated by C<-> or C<..> automatically.

Tries various nested arrays, like 1-way, 2-way, 3-way, 4-way arrays, with
optional final binary search, simple range searches, perfect hashes, patricia
trees, or nested variants of it.  Sometimes even a simple switch statement or
nested if's are optimal.

Optimizes per default on code size, not speed. You may use option C<--speed>
instead.

=head1 SEE ALSO

L<gperf>, perl5 L<CharClass::Matcher>

=cut
